name: Run Tests

# When to run tests.
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main

jobs:
  tests:
    # Name.
    name: WordPress ${{ matrix.wp-versions }} / PHP ${{ matrix.php-versions }}

    # Virtual Environment to use.
    # @see: https://github.com/actions/virtual-environments
    runs-on: ubuntu-20.04

    # Environment Variables.
    # Accessible by using ${{ env.NAME }}
    # Use ${{ secrets.NAME }} to include any GitHub Secrets in ${{ env.NAME }}
    # The base folder will always be /home/runner/work/github-repo-name/github-repo-name
    env:
      ROOT_DIR: /home/runner/work/convertkit-wordpress-libraries/convertkit-wordpress-libraries/wordpress
      PLUGIN_DIR: /home/runner/work/convertkit-wordpress-libraries/convertkit-wordpress-libraries/wordpress/wp-content/plugins/convertkit-wordpress-libraries
      DB_NAME: test
      DB_USER: root
      DB_PASS: root
      DB_HOST: localhost
      INSTALL_PLUGINS: "woocommerce" # Don't include this repository's Plugin here.
      CONVERTKIT_API_KEY: ${{ secrets.CONVERTKIT_API_KEY }} # ConvertKit API Key, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SECRET: ${{ secrets.CONVERTKIT_API_SECRET }} # ConvertKit API Secret, stored in the repository's Settings > Secrets
      CONVERTKIT_API_KEY_NO_DATA: ${{ secrets.CONVERTKIT_API_KEY_NO_DATA }} # ConvertKit API Key for ConvertKit account with no data, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SECRET_NO_DATA: ${{ secrets.CONVERTKIT_API_SECRET_NO_DATA }} # ConvertKit API Secret for ConvertKit account with no data, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SIGNED_SUBSCRIBER_ID: ${{ secrets.CONVERTKIT_API_SIGNED_SUBSCRIBER_ID }} # ConvertKit API Signed Subscriber ID, stored in the repository's Settings > Secrets
      CONVERTKIT_API_SUBSCRIBER_TOKEN: ${{ secrets.CONVERTKIT_API_SUBSCRIBER_TOKEN }} # ConvertKit API Subscriber Token, stored in the repository's Settings > Secrets

    # Defines the WordPress and PHP Versions matrix to run tests on.
    strategy:
      matrix:
        wp-versions: [ 'latest' ] #[ 'latest', '6.1.1' ]
        php-versions: [ '7.4', '8.0', '8.1', '8.2', '8.3' ] #[ '7.4', '8.0', '8.1', '8.2' ]

    # Steps to install, configure and run tests
    steps:
      # Some workflows checkout WordPress from GitHub, but that seems to bring a bunch of uncompiled files with it.
      # Instead download from wordpress.org stable.
      - name: Download WordPress
        run: wget https://wordpress.org/wordpress-${{ matrix.wp-versions }}.tar.gz

      - name: Extract WordPress
        run: tar xfz wordpress-${{ matrix.wp-versions }}.tar.gz

      # Checkout (copy) this repository's Plugin to this VM.
      - name: Checkout Plugin
        uses: actions/checkout@v4
        with:
          path: ${{ env.PLUGIN_DIR }}

      # Install PHP version to run tests against.
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
          tools: cs2pr

      # Write any secrets, such as API keys, to the .env.dist.testing file now.
      # Make sure your committed .env.dist.testing file ends with a newline.
      # The formatting of the contents to include a blank newline is deliberate.
      - name: Define GitHub Secrets in .env.dist.testing
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: ${{ env.PLUGIN_DIR }}/.env.dist.testing
          contents: |

            CONVERTKIT_API_KEY=${{ env.CONVERTKIT_API_KEY }}
            CONVERTKIT_API_SECRET=${{ env.CONVERTKIT_API_SECRET }}
            CONVERTKIT_API_KEY_NO_DATA=${{ env.CONVERTKIT_API_KEY_NO_DATA }}
            CONVERTKIT_API_SECRET_NO_DATA=${{ env.CONVERTKIT_API_SECRET_NO_DATA }}
            CONVERTKIT_API_SIGNED_SUBSCRIBER_ID=${{ env.CONVERTKIT_API_SIGNED_SUBSCRIBER_ID }}
            CONVERTKIT_API_SUBSCRIBER_TOKEN=${{ env.CONVERTKIT_API_SUBSCRIBER_TOKEN }}
          write-mode: append

      # Installs wp-browser, Codeception, PHP CodeSniffer and anything else needed to run tests.
      - name: Run Composer
        working-directory: ${{ env.PLUGIN_DIR }}
        run: composer update

      - name: Build PHP Autoloader
        working-directory: ${{ env.PLUGIN_DIR }}
        run: composer dump-autoload

      # Run Coding Standards on Tests.
      - name: Run Coding Standards on Tests
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/phpcs -q --standard=phpcs.tests.xml --report=checkstyle ./tests | cs2pr

      # Run WordPress Coding Standards on Plugin.
      - name: Run WordPress Coding Standards
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/phpcs -q --standard=phpcs.xml --report=checkstyle ./ | cs2pr

      # Run PHPStan for static analysis.
      - name: Run PHPStan Static Analysis
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/phpstan analyse --memory-limit=1024M

      # Build Codeception Tests.
      - name: Build Tests
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/codecept build

      # Run Codeception WPUnit Tests
      - name: Run WPUnit Tests
        working-directory: ${{ env.PLUGIN_DIR }}
        run: php vendor/bin/codecept run tests/wpunit --fail-fast